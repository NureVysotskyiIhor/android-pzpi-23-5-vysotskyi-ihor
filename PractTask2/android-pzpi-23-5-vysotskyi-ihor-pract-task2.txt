
МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з практичної роботи № 2 з дисципліни
Програмування під Android
   





Виконала:                                                                                     Перевірив:
ст. гр. ПЗПІ-23-5                        				ст. викладач кафедри ПІ
Висоцький І. О.							Сокорчук Ігор Петрович









Харків 2024
Завдання

1.	Розмітка екрана
1.1.	Підготовка робочого середовища
1.2.	Практика з Linear/Constraint-Layout
1.3.	Практика з атрибутами елементів
1.4.	Обробка подій
2.	Файли розмітки Layout
2.1.	Створення різних Layout
2.2.	Практика роботи з атрибутами
3.	Життєвий цикл та методи Activity
3.1.	Ознайомлення з життєвим циклом Activity
3.2.	Дослідження методів життєвого циклу
3.3.	Вивчення поведінки Activity при зміні орієнтації екрана
3.4.	Практичне завдання з ручного збереження стану
3.5.	Дослідження переходу між Activity
3.6.	Обробка завершення Activity 
Хід роботи

1.	Розмітка екрана
Відкрийте Android Studio та створіть новий проєкт, вибравши шаблон Empty Views Activity. Відкрийте файл res/layout/activity_main.xml. [додаток А]
Практика з LinearLayout: cтворіть розмітку, що містить кілька кнопок, розташованих одна під одною. Використайте властивості orientation для вертикальної орієнтації. Задайте для кожної кнопки властивості layout_width та layout_height, експериментуйте з різними значеннями, як wrap_content та match_parent. Використовуйте властивості weight.
Практика з ConstraintLayout: розмістіть елементи на екрані, використовуючи обмеження для позиціонування (constraints), щоб задати їх взаємне розташування. У моєму випадку я розташовувала інші розмітки усередині цієї розмітки.
Практика з RelativeLayout: розмістіть кілька елементів відносно один одного, використовуючи атрибути, такі як layout_below, layout_toRightOf.
Практика з FrameLayout: додайте кілька елементів, щоб побачити, як вони накладаються один на одного.
Практика з GridLayout: розмістіть текстові поля та кнопки у вигляді таблиці, задаючи кількість стовпців і рядків.
Використовуємо такі атрибути, як padding, margin, gravity та layout_gravity для налаштування відступів та вирівнювання елементів.	 Налаштовуємо текстові поля.
2.	Обробка подій.
Додайте до кнопки обробник події натискання у файлі MainActivity.java.
1. public void onButtonClick(View v) {
2.    Button button = findViewById(R.id.button1);
3.    button.setText(getString(R.string.newButtonName));
4.}

У файлі activity_main.xml додайте атрибут android:onClick="onButtonClick" до кнопки, а в класі MainActivity створіть відповідний метод onButtonClick.
1. android:onClick="onButtonClick"

3.	Життєвий цикл та методи Activity
Додайте до кожного методу життєвого циклу (onCreate, onStart, onResume тощо) функцію виведення повідомлень у лог (Log.d) для відстеження послідовності викликів. Всі вони однакові, тож приведу лише один як приклад:
1.        Log.d(TAG, "onCreate called");
Змініть орієнтацію пристрою (з портретної на ландшафтну) та спостерігайте за викликами методів життєвого циклу у логах.
Дослідіть, як зміна орієнтації перезапускає Activity (викликаються методи onPause(), onStop(), onDestroy(), а потім onCreate(), onStart(), onResume()).
Додайте в Activity поле для введення тексту (наприклад, EditText).
При зміні орієнтації екрана текст у полі буде очищено, оскільки Activity перезавантажується.
Але воно не буде затерто створено знову, якщо дати полю унікальний id. 
Було реалізовано збереження та відновлення вручну у додатковому завданні. Було створено клікер, що зберігаю кількість кліків.
1.    public void onIncreaseCounter(View v) {
2.        TextView count = findViewById(R.id.count);
3.        Integer previousCounter = Integer.parseInt(count.getText().toString());
4.        Integer newValue = previousCounter + 1;
5.        count.setText(newValue.toString());
6.    }

Зберігається за допомгою:
1.protected void onSaveInstanceState(@NonNull Bundle outState) {
2.        TextView count = findViewById(R.id.count);
3.        outState.putString("counter", count.getText().toString());
4.        super.onSaveInstanceState(outState);
Відновлюється за допогою:
1.    protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState){
2.        super.onRestoreInstanceState(savedInstanceState);
3.        TextView count = findViewById(R.id.count);
4.        count.setText(savedInstanceState.getString("counter"));
5.    }

Створіть друге Activity у вашому застосунку.
Додайте кнопку для переходу до другого Activity.
Button button = findViewById(R.id.button);
button.setOnClickListener(v -> {
    Intent intent = new Intent(MainActivity.this, SecondActivity.class);
    startActivity(intent);
});

Відстежте виклики методів життєвого циклу при переході між Activity.
Додайте кнопку для завершення Activity (виклик методу finish()).
finishButton.setOnClickListener(v -> {
    // Закриваємо це Activity
    finish();
});

 
Висновки
Під час практичної роботи було досліджено: створення та налаштування різних розміток, використовуючи XML-файли. Виявлено, як компоненти та атрибути взаємодіють між собою.
Ознайомилися із життєвим циклом компонентів Activity у застосунках Android. Навчилися керувати станами Activity через використання ключових методів життєвого циклу.
Відеозвіт на YouTube. URL: Part 1: https://www.youtube.com/watch?v=R-QjRI6alTI 
					    Part 2: https://www.youtube.com/watch?v=xE9bvgVhZKM		

 
Використані джерела

1.	Методичні вказівки до практичних занять: Розмітка екрана в Android. URL: https://dl.nure.ua/mod/page/view.php?id=599542 (дата звернення: 07.10.2024)
2.	Методичні вказівки до практичних занять: Файли розмітки Layout. URL: https://dl.nure.ua/mod/page/view.php?id=599543 (дата звернення: 07.10.2024)
3.	Методичні вказівки до практичного заняття: Життєвий цикл та методи Activity. URL: https://dl.nure.ua/mod/page/view.php?id=599544 (дата звернення: 07.10.2024)
 
Додаток А

Файл розмітки.
<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">


    <LinearLayout
        android:id="@+id/linearLayout2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="15dp"
        android:gravity="center_horizontal"
        android:orientation="vertical"
        android:padding="16dp"
        >

        <TextView
            android:id="@+id/textView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:layout_margin="15dp"
            android:gravity="center"
            android:padding="15dp"
            android:text="Hello World"
            android:textSize="18sp"
            android:textStyle="italic"
            android:background="#003300"
            android:textColor="@color/white"            />

        <Button
            android:id="@+id/button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_margin="15dp"
            android:onClick="onButtonClick"
            android:text="Click Me"
            />

        <ImageView
            android:id="@+id/imageView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_margin="15dp"
            android:src="@drawable/ic_launcher_foreground" />

        <ImageView
            android:id="@+id/imageView2"
            android:layout_width="209dp"
            android:layout_height="wrap_content"
            android:layout_marginBottom="15dp"
            android:src="@drawable/ic_launcher_foreground"
            android:layout_gravity="end"
            />

        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Button 1" />

        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Button 2" />

        <Button
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:text="Button 3" />

        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="380dp"
            android:layout_height="380dp"

            >

            <TextView
                android:id="@+id/textViewConstraint"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Welcome!"
                android:textSize="18sp"
                app:layout_constraintBottom_toBottomOf="parent"
                android:layout_margin="35dp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <Button
                android:id="@+id/buttonConstraint"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="#003300"
                android:text="Press Me"
                android:visibility="visible"
                android:layout_margin="35dp"
                app:layout_constraintEnd_toEndOf="parent"

                app:layout_constraintTop_toBottomOf="@id/textViewConstraint" />
        </androidx.constraintlayout.widget.ConstraintLayout>
        <RelativeLayout
            android:layout_width="380dp"
            android:layout_height="match_parent">

            <EditText
                android:id="@+id/password"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="15dp"
                android:hint="Password"
                android:paddingStart="15dp"
                android:textSize="20sp">

            </EditText>

            <EditText
                android:id="@+id/email"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_below="@id/password"
                android:layout_margin="15dp"
                android:hint="Email"
                android:paddingStart="15dp"
                android:textSize="20sp">

            </EditText>
            <Button
                android:layout_below="@id/email"
                android:id="@+id/sign_in"
                android:layout_margin="15dp"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Sign in"
                >

            </Button>

            <Button
                android:layout_below="@id/email"
                android:layout_toRightOf="@+id/sign_in"
                android:id="@+id/sign_up"
                android:layout_margin="15dp"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Sign up"
                >

            </Button>
        </RelativeLayout>

        <FrameLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="#FFC107">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Hello World!"
                android:textSize="30sp"
                android:textColor="@color/black"
                android:layout_gravity="center" />

            <ImageView
                android:layout_width="100dp"
                android:layout_height="100dp"
                android:src="@drawable/ic_launcher_foreground"
                android:layout_gravity="center"/>

            <Button
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="bottom|center_horizontal"

                android:text="Click Me" />

        </FrameLayout>

        <GridLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:columnCount="2"
            android:rowCount="3"
            android:padding="16dp">

            <!-- TextView, прижатий до верхньої границі -->
            <TextView
                android:id="@+id/textView1"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Text at the middle"
                android:textSize="18sp"
                android:layout_row="0"
                android:layout_columnSpan="2"
                android:padding="8dp"
                android:gravity="center"
                />

            <!-- Кнопка у першій колонці другого ряду, займає весь простір по ширині -->
            <Button
                android:id="@+id/button1"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:text="Button 1"
                android:layout_row="1"
                android:layout_column="0"
                android:layout_columnWeight="1"
                android:layout_gravity="fill_horizontal" />

            <!-- Кнопка у другій колонці другого ряду, займає весь простір по ширині -->
            <Button
                android:id="@+id/button2"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:text="Button 2"
                android:layout_row="1"
                android:layout_column="1"
                android:layout_columnWeight="1"
                android:layout_gravity="fill_horizontal" />

            <!-- Кнопка у першій колонці третього ряду, займає весь простір по ширині -->
            <Button
                android:id="@+id/button3"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:text="Button 3"
                android:layout_row="2"
                android:layout_column="0"
                android:layout_columnWeight="1"
                android:layout_gravity="fill_horizontal" />

            <!-- Кнопка у другій колонці третього ряду, займає весь простір по ширині -->
            <Button
                android:id="@+id/button4"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:text="Button 4"
                android:layout_row="2"
                android:layout_column="1"
                android:layout_columnWeight="1"
                android:layout_gravity="fill_horizontal" />

        </GridLayout>
    </LinearLayout>

</ScrollView>


