МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з лабораторної роботи № 2 з дисципліни
Програмування під Android
   





Виконала:                                                                                     Перевірив:
ст. гр. ПЗПІ-23-5                        				ст. викладач кафедри ПІ
Висоцький І. О.						          Сокорчук Ігор Петрович









2024 
ЗАВДАННЯ

Розробити редактор, у якому з допомогою трьох регуляторів SeekBar встановлюється колір панелі.
Регулятори визначають RGB компоненти кольору панелі. Зовнішній вигляд екрану редактора повинен залежати від орієнтації пристроя. У портретній орієнтації пристроя, регулятори повинні знаходитися знизу від панелі, займати 1/3 висоти і розташовуватися на всю ширину екрану. У ланшафтній – праворуч від панелі і займати 1/3 ширини. Решту екрану повинна займати кольорова панель.
 
ХІД РОБОТИ

Cтворюємо новий проєкт та обираємо Empty Views Activity.
Спочатку зробимо розмітку для портретної та ландшафтної орієнтацій, щоб потім було простіше прив’язувати змінні до вже існуючих значень. Отже, відкриваємо файл activity_main.xml, та починаємо із вікна для відображення кольору:
1.	<View
2.	    android:id="@+id/colorPanel"
3.	    android:layout_width="0dp"
4.	    android:layout_height="match_parent"
5.	    android:layout_weight="2"
6.	    android:background="#FFFFFF"/>

Створюємо 3 регулятори seekBar та підписуємо кожен за допомогою TextView, за який колір він буде відповідати: червоний «seekBarRed», зелений «seekBarGreen» та синій «seekBarBlue» [ДОДАТОК А].
Вирівнюємо згідно умови завдання, так щоб частина з регуляторами займала одну третину екранного простору. Це було зроблено за допомогою елемента layout_weight, що поділяє простір на частини.
Аналогічно створюємо розмітку для ландшафтної орієнтації [ДОДАТОК Б].
Коли розмітки було створено, можна переходити до основного наповнення. Відкриваємо MainActivity.java.
Спершу створимо змінні для збереження кольорового коду:
1.int r = 0;
2.int g = 0;
3.int b = 0;

Знаходимо за id панель для відображення кольору:
1. private View colorPanel;
2. private SeekBar seekBarRed, seekBarGreen, seekBarBlue;
3. colorPanel = findViewById(R.id.colorPanel);

Знаходимо за id кожен із регуляторів, за допомогою вбудованого метода onProgressChanged записуємо нове значення для змінної кольору. Змінюємо колір панелі на новий зо допомогою описаної пізніше функції UpdateColorPanel():
1.	colorPanel = findViewById(R.id.colorPanel); 
2.	seekBarRed = findViewById(R.id.seekBarRed); 
3.	seekBarGreen = findViewById(R.id.seekBarGreen); 
4.	seekBarBlue = findViewById(R.id.seekBarBlue); 
5.	SeekBar.OnSeekBarChangeListener colorChangeListener = new SeekBar.OnSeekBarChangeListener() 
6.	{ @Override public void onProgressChanged(SeekBar seekBar, int progress, 
7.	boolean fromUser) { updateColorPanel(); }
Створюємо методи для кожного із регуляторів:
1.	seekBarRed.setOnSeekBarChangeListener(colorChangeListener);
2.	seekBarGreen.setOnSeekBarChangeListener(colorChangeListener);
3.	seekBarBlue.setOnSeekBarChangeListener(colorChangeListener);
Тепер перейдемо до UpdateColorPanel. Ця функція змінює формат трьох числових змінних на код RGB: “FFFFFF”:
1.	private void updateColorPanel() { 
2.	int red = seekBarRed.getProgress(); 
3.	int green = seekBarGreen.getProgress(); 
4.	int blue = seekBarBlue.getProgress(); 
5.	int color = Color.rgb(red, green, blue); 
6.	colorPanel.setBackgroundColor(color); }
У функції беруться поточні значення з усіх 3 прогрес барів і далі за отриманими значення встановлюється колір фону. [ДОДАТОК В]
 
ВИСНОВКИ

Під час лабораторної роботи було закріплено знання з обробки подій при використанні регуляторів та відображення змін на екрані за допомогою елемента View.
Відеозвіт на YouTube. URL: https://youtu.be/XzlAMMKhW1Y 

 
ВИКОРИСТАНІ ДЖЕРЕЛА

1.	Документація SeekBar Android developers. URL: https://developer.android.com/reference/android/widget/SeekBar (дата звернення: 10.10.2024)
2.	Документація Guideline Android developers. URL: https://developer.android.com/reference/androidx/constraintlayout/widget/Guideline (дата звернення: 10.10.2024)
 
ДОДАТОК А

Файл розмітки для портерної орієнтаціїї.
<?xml version="1.0" encoding="utf-8"?>
<!-- res/layout/activity_main.xml -->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <!-- Панель кольору -->
    <View
        android:id="@+id/colorPanel"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="2"
        android:background="#000000"/>

    <!-- Блок для регуляторів RGB -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:orientation="vertical">

        <SeekBar
            android:id="@+id/seekBarRed"
            android:layout_width="match_parent"
            android:layout_height="100px"
            android:max="255" />

        <SeekBar
            android:id="@+id/seekBarGreen"
            android:layout_width="match_parent"
            android:layout_height="100px"
            android:max="255" />

        <SeekBar
            android:id="@+id/seekBarBlue"
            android:layout_width="match_parent"
            android:layout_height="100px"
            android:max="255" />
    </LinearLayout>
</LinearLayout>

 
ДОДАТОК Б

Файл розмітки для ландшафтної орієнтаціїї.
<!-- res/layout-land/activity_main.xml -->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="horizontal">

    <!-- Панель кольору -->
    <View
        android:id="@+id/colorPanel"
        android:layout_width="0dp"
        android:layout_height="match_parent"
        android:layout_weight="2"
        android:background="#FFFFFF"/>

    <!-- Блок для регуляторів RGB -->
    <LinearLayout
        android:layout_width="0dp"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:orientation="vertical">

        <SeekBar
            android:id="@+id/seekBarRed"
            android:layout_width="match_parent"
            android:layout_height="100px"
            android:max="255"/>
        <SeekBar
            android:id="@+id/seekBarGreen"
            android:layout_width="match_parent"
            android:layout_height="100px"
            android:max="255"/>
        <SeekBar
            android:id="@+id/seekBarBlue"
            android:layout_width="match_parent"
            android:layout_height="100px"
            android:max="255"/>
    </LinearLayout>
</LinearLayout>
ДОДАТОК В

Код програми.
package ihor.vysotskyi.nure;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
import android.graphics.Color;
import android.os.Bundle;
import android.widget.SeekBar;
import android.view.View;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private View colorPanel;
    private SeekBar seekBarRed, seekBarGreen, seekBarBlue;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
        setContentView(R.layout.activity_main);

        colorPanel = findViewById(R.id.colorPanel);
        seekBarRed = findViewById(R.id.seekBarRed);
        seekBarGreen = findViewById(R.id.seekBarGreen);
        seekBarBlue = findViewById(R.id.seekBarBlue);

        SeekBar.OnSeekBarChangeListener colorChangeListener = new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                updateColorPanel();
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {}

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {}
        };

        seekBarRed.setOnSeekBarChangeListener(colorChangeListener);
        seekBarGreen.setOnSeekBarChangeListener(colorChangeListener);
        seekBarBlue.setOnSeekBarChangeListener(colorChangeListener);
    }
    private void updateColorPanel() {
        int red = seekBarRed.getProgress();
        int green = seekBarGreen.getProgress();
        int blue = seekBarBlue.getProgress();
        int color = Color.rgb(red, green, blue);
        colorPanel.setBackgroundColor(color);
    }
    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        // Зберігаємо значення регуляторів у Bundle
        outState.putInt("red", seekBarRed.getProgress());
        outState.putInt("green", seekBarGreen.getProgress());
        outState.putInt("blue", seekBarBlue.getProgress());
    }

    @Override
    protected void onRestoreInstanceState(Bundle savedInstanceState) {
        super.onRestoreInstanceState(savedInstanceState);
        // Відновлюємо значення регуляторів
        if (savedInstanceState != null) {
            seekBarRed.setProgress(savedInstanceState.getInt("red"));
            seekBarGreen.setProgress(savedInstanceState.getInt("green"));
            seekBarBlue.setProgress(savedInstanceState.getInt("blue"));
            updateColorPanel();
        }
    }

}*/
package ihor.vysotskyi.nure;

import android.graphics.Color;
import android.os.Bundle;
import android.widget.SeekBar;
import android.view.View;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private View colorPanel;
    private SeekBar seekBarRed,
                    seekBarGreen,
                    seekBarBlue;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        colorPanel = findViewById(R.id.colorPanel);
        seekBarRed = findViewById(R.id.seekBarRed);
        seekBarGreen = findViewById(R.id.seekBarGreen);
        seekBarBlue = findViewById(R.id.seekBarBlue);

        SeekBar.OnSeekBarChangeListener colorChangeListener = new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                updateColorPanel();
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {}

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {}
        };

        seekBarRed.setOnSeekBarChangeListener(colorChangeListener);
        seekBarGreen.setOnSeekBarChangeListener(colorChangeListener);
        seekBarBlue.setOnSeekBarChangeListener(colorChangeListener);
    }

    private void updateColorPanel() {
        int red = seekBarRed.getProgress();
        int green = seekBarGreen.getProgress();
        int blue = seekBarBlue.getProgress();
        int color = Color.rgb(red, green, blue);
        colorPanel.setBackgroundColor(color);
    }
}

